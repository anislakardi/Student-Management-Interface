/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestion.d.etudiants;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;


/**
 *
 * @author PC
 */
public class gestionDEtudiantFrame extends javax.swing.JFrame {

    /**
     * Creates new form gestionDEtudiantFrame
     */
    private static final String url = "jdbc:mysql://localhost:3306/gestion%20des%20etudiants";
    private static final String user = "root";
    private static final String password = "";

    public gestionDEtudiantFrame() {
        initComponents();
        // Appel de la méthode pour charger les étudiants lors du lancement de l'application
        chargerEtudiants();
    }

    etudiant e = new etudiant("","","","");

    // Méthode pour charger les étudiants depuis la base de données et les afficher dans le tableau
    private void chargerEtudiants() {
        try {
            // Connexion à la base de données
            Connection conn = DriverManager.getConnection(url, user, password);

            // Préparation de la requête SQL pour récupérer tous les étudiants
            String query = "SELECT * FROM etudiants";
            var stmt = conn.createStatement();
            var rs = stmt.executeQuery(query);

            // Récupérer les données et les ajouter dans le tableau
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableEtudiants.getModel();
            while (rs.next()) {
                int id = rs.getInt("id");
                String nom = rs.getString("nom");
                String prenom = rs.getString("prenom");
                String dateNaissance = rs.getString("date_naissance");
                String adresse = rs.getString("adresse");

                // Ajouter les données dans le modèle du tableau
                model.addRow(new Object[]{id, nom, prenom, dateNaissance, adresse});
            }

            // Fermer la connexion
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur de base de données : " + ex.getMessage());
        }
    }
    ArrayList<etudiant> Etudiants = new ArrayList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableEtudiants = new javax.swing.JTable();
        nomChamp = new javax.swing.JTextField();
        prenomChamp = new javax.swing.JTextField();
        dateChamp = new javax.swing.JTextField();
        adresseChamp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bMAJ = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion des Étudiants");

        tableEtudiants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nom", "prénom", "date_naissance", "adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEtudiants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEtudiantsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEtudiants);

        dateChamp.setText("YYYY/MM/DD");
        dateChamp.setToolTipText("");

        jLabel1.setText("Nom");

        jLabel2.setText("Prenom");

        jLabel3.setText("Date naissance");

        jLabel4.setText("Adresse");

        bMAJ.setText("Mise à jour");
        bMAJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMAJActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(adresseChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bMAJ, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prenomChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 370, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {adresseChamp, dateChamp, nomChamp, prenomChamp});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenomChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateChamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adresseChamp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(bMAJ, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {adresseChamp, dateChamp, nomChamp, prenomChamp});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bMAJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMAJActionPerformed
        // TODO add your handling code here:
        modifierEtudiant();
    }//GEN-LAST:event_bMAJActionPerformed

    private void tableEtudiantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEtudiantsMouseClicked
        // TODO add your handling code here:
        int selectedRow = tableEtudiants.getSelectedRow();
        int i = (int) tableEtudiants.getValueAt(selectedRow, 0);
        String n = (String) tableEtudiants.getValueAt(selectedRow, 1);
        String p = (String) tableEtudiants.getValueAt(selectedRow, 2);
        String d = (String) tableEtudiants.getValueAt(selectedRow, 3);
        String a = (String) tableEtudiants.getValueAt(selectedRow, 4);
        
        nomChamp.setText(n);
        prenomChamp.setText(p);
        dateChamp.setText(d);
        adresseChamp.setText(a);   
    }//GEN-LAST:event_tableEtudiantsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gestionDEtudiantFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gestionDEtudiantFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gestionDEtudiantFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gestionDEtudiantFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gestionDEtudiantFrame().setVisible(true);
            }
        });
    }


private void modifierEtudiant() {
    
    int selectedRow = tableEtudiants.getSelectedRow();

    String nom = nomChamp.getText();
    String prenom = prenomChamp.getText();
    String dateN = dateChamp.getText();
    String adresse = adresseChamp.getText();

    if (selectedRow != -1) {
        // Mise a jour
        int id = (int) tableEtudiants.getValueAt(selectedRow, 0);

        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            
            String query = "UPDATE etudiants SET nom = ?, prenom = ?, date_naissance = ?, adresse = ? WHERE id = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, nom);
            pstmt.setString(2, prenom);
            pstmt.setString(3, dateN);
            pstmt.setString(4, adresse);
            pstmt.setInt(5, id);

            pstmt.executeUpdate();

            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableEtudiants.getModel();
            model.setRowCount(0);
            chargerEtudiants();
    } else {
        // Ajouter
        try {
            Connection conn = DriverManager.getConnection(url, user, password);

            String query = "INSERT INTO etudiants (nom, prenom, date_naissance, adresse) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, nom);
            pstmt.setString(2, prenom);
            pstmt.setString(3, dateN);
            pstmt.setString(4, adresse);

            pstmt.executeUpdate();

            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tableEtudiants.getModel();
        model.setRowCount(0);
        chargerEtudiants();
    }

    nomChamp.setText("");
    prenomChamp.setText("");
    dateChamp.setText("YYYY/MM/DD");
    adresseChamp.setText("");
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adresseChamp;
    private javax.swing.JButton bMAJ;
    private javax.swing.JTextField dateChamp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomChamp;
    private javax.swing.JTextField prenomChamp;
    private javax.swing.JTable tableEtudiants;
    // End of variables declaration//GEN-END:variables
}
